// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cr_lrt
NumericMatrix cr_lrt(arma::mat& Y, arma::mat& Delta, arma::mat& X, size_t n_gene, size_t n_sample, size_t n_boot);
RcppExport SEXP _PTDA_cr_lrt(SEXP YSEXP, SEXP DeltaSEXP, SEXP XSEXP, SEXP n_geneSEXP, SEXP n_sampleSEXP, SEXP n_bootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_gene(n_geneSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_sample(n_sampleSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_boot(n_bootSEXP);
    rcpp_result_gen = Rcpp::wrap(cr_lrt(Y, Delta, X, n_gene, n_sample, n_boot));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PTDA_cr_lrt", (DL_FUNC) &_PTDA_cr_lrt, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_PTDA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
